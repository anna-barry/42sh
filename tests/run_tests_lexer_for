#!/bin/bash

gcc src/lexer/lexer.c src/lexer/token.c src/lexer/token_printer.c src/lexer/for_lexer.c -o token_printer
echo "********* Testing Lexer For 1 ***********"
diff <(./token_printer "for named in namesss;do; echo \$name;done <> hi") <(printf "For
named
In
namesss
;
Do
;
echo
\$name
;
Done
hi
EOF
")
var1=$?
#rm ./token_printer
if [ $var1 -ne 0 ]; 
then
echo "error"
rm ./token_printer
exit 1;
fi
echo "done [ok] "

echo "********* Testing Lexer For 2 ***********"
diff <(./token_printer "for i in {1..10..2};do; echo \$i;done") <(printf "For
i
In
1..10..2
;
Do
;
echo
\$i
;
Done
EOF
")
var2=$?
if [ $var2 -ne 0 ]; 
then
echo "error"
rm ./token_printer
exit 1;
fi
echo "done [ok] "

echo "********* Testing Lexer For 3 ***********"
diff <(./token_printer "for i in {1..10};do; echo \$i;done") <(printf "For
i
In
1..10..1
;
Do
;
echo
\$i
;
Done
EOF
")
var2=$?
if [ $var2 -ne 0 ]; 
then
echo "error"
rm ./token_printer
exit 1;
fi
echo "done [ok] "

echo "********* Testing Lexer For 4 ***********"
diff <(./token_printer "for i in \$hi;do; echo \$i;done \"hi\"") <(printf "For
i
In
\$hi
;
Do
;
echo
\$i
;
Done
hi
EOF
")
var2=$?
if [ $var2 -ne 0 ]; 
then
echo "error"
rm ./token_printer
exit 1;
fi
echo "done [ok] "

echo "********* Testing Lexer For 5 ***********"
diff <(./token_printer "for named in namesss hi a {1..2};do; echo \$name;done <> hi") <(printf "For
named
In
namesss
hi
a
1..2..1
;
Do
;
echo
\$name
;
Done
hi
EOF
")
var2=$?
if [ $var2 -ne 0 ]; 
then
echo "error"
rm ./token_printer
exit 1;
fi
echo "done [ok] "

echo "********* Testing Lexer For 6 with redirections >& ***********"
diff <(./token_printer "if echo b; then echo a; fi >&") <(printf "If
echo
b
;
Then
echo
a
;
Fi
1
EOF
")
var2=$?
if [ $var2 -ne 0 ]; 
then
echo "error"
rm ./token_printer
exit 1;
fi
echo "done [ok] "

rm ./token_printer